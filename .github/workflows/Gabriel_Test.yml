name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      log_errors:
        description: 'Log errors if tests fail'
        required: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python (eller annat språk)
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Justera beroende på ditt projekt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Byt ut med ditt eget beroendehanteringssystem

      - name: Run tests
        run: |
          pytest tests/  # Byt ut med ditt testkommando om det är annat än pytest

      - name: Upload error log if tests fail
        if: ${{ failure() && github.event.inputs.log_errors == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: error-log
          path: error.log  # Se till att du har en error.log om testerna misslyckas

  build:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t myapp .  # Bygg Docker-imagen från din Dockerfile

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_GABRIEL_USERNAME }}
          password: ${{ secrets.DOCKER_GABRIEL_PASSWORD }}


      - name: Publish Docker image to DockerHub
        run: |
          docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/setup-azurecli@v1

      - name: Log in to Azure
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy to Azure App
        run: |
          az webapp up --name myapp --resource-group myresourcegroup --plan myplan --docker-image ${{ secrets.DOCKER_USERNAME }}/myapp:latest

