name: DevOps Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      log_errors:
        description: 'Should error logs be generated?'
        required: true
        default: 'false'

jobs:
  # Jobb för att bygga och testa applikationen
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (eller annan teknikstack du använder)
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        continue-on-error: true  # Fortsätt även om testerna misslyckas

      - name: Generate error log if needed
        if: ${{ github.event.inputs.log_errors == 'true' && failure() }}
        run: echo "Tests failed" > error.log
        continue-on-error: true

  # Docker-jobb: Bygg och publicera Docker image
  docker:
    needs: build  # Kör endast om "build"-jobbet är klart
    runs-on: ubuntu-latest
    steps:
      # Bygg Docker-imagen
      - name: Build Docker image with buildx
        run: docker buildx build -t ${{ secrets.DOCKER_USERNAME }}/myapp .

      # Logga in på DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_GABRIEL_USERNAME }}
          password: ${{ secrets.DOCKER_GABRIEL_PASSWORD }}

      # Publicera Docker-imagen till DockerHub
      - name: Publish Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp

  # Azure-jobb: Koppla Docker-imagen till Azure App (om alla tester är godkända)
  azure_deploy:
    needs: docker  # Kör endast om "docker"-jobbet är klart
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Docker image to Azure App
        run: |
          az webapp config container set --name ${{ secrets.AZURE_APP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/myapp
