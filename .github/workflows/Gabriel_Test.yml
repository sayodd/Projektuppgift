name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      generate_error_log:
        description: 'Generate error log if tests fail'
        required: false
        default: 'false'
        type: boolean

env:
  OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_GABRIEL_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_GABRIEL_PASSWORD }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (or other backend environment)
        uses: actions/setup-node@v3
        with:
          node-version: '14' # Anpassa beroende på din stack

      - name: Install dependencies
        run: npm install # Anpassa för ditt projekt

      - name: Run tests
        id: run_tests
        run: npm test # Anpassa för ditt projekt

      - name: Upload test results if failed
        if: failure() && ${{ github.event.inputs.generate_error_log == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-error-log
          path: ./test-error.log

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_GABRIEL_USERNAME }}
          password: ${{ secrets.DOCKER_GABRIEL_PASSWORD }}

      - name: Build Docker image
        run: docker build -t myapp:${{ github.sha }} .

      - name: Push Docker image to DockerHub
        run: docker push myapp:${{ github.sha }}

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Deploy Docker image to Azure App Service
        run: |
          az webapp config container set \
            --name my-azure-app \
            --resource-group my-resource-group \
            --docker-custom-image-name myapp:${{ github.sha }} \
            --docker-registry-server-url https://index.docker.io \
            --docker-registry-server-user ${{ secrets.DOCKER_GABRIEL_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKER_GABRIEL_PASSWORD }}
